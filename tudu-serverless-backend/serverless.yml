service: tudu-serverless-backend
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs16.x
  region: ap-southeast-3
  profile: myprofile
  environment:
    TUDUAPPREGION: ap-southeast-3
    TUDUAPPJWTSECRET: tudu-app-jwt-secret
    DYNAMODB_TABLE: tudu-serverless-backend-dev-db
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ssm:GetParameter
          Resource: "arn:aws:ssm:${self:provider.region}:*:parameter/${self:provider.environment.TUDUAPPJWTSECRET}"
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  signup:
    handler: src/auth/signup.signup
    events:
      - http:
          path: auth/signup
          method: post
          cors: true

  login:
    handler: src/auth/login.login
    events:
      - http:
          path: auth/login
          method: post
          cors: true    
  
  addTask:
    handler: src/tasks/addTask.addTask
    events:
      - http:
          path: task/addTask
          method: post
          cors: true    
  
  getListTask:
    handler: src/tasks/getListTask.getListTask
    events:
      - http:
          path: task/getListTask
          method: post
          cors: true    
  
  getTask:
    handler: src/tasks/getTask.getTask
    events:
      - http:
          path: task/getTask
          method: post
          cors: true
  
  updateTask:
    handler: src/tasks/updateTask.updateTask
    events:
      - http:
          path: task/updateTask
          method: post
          cors: true
  
  deleteTask:
    handler: src/tasks/deleteTask.deleteTask
    events:
      - http:
          path: task/deleteTask
          method: post
          cors: true

resources:
  Resources:
    TuduAppJwtSecret:
      Type: 'AWS::SSM::Parameter'
      Properties: 
        Name: ${self:provider.environment.TUDUAPPJWTSECRET}
        Type: String
        Value: 7hwOXXReuqHLeLvqyElpCCvMVRXFtlEl0JuuekNne3rDsBhBIAs42tp761ro
        Description: Secret key for JWT symmetric algorithms
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}

plugins:
  - serverless-esbuild
